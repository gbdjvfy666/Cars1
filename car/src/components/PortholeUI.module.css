@import url('https://fonts.cdnfonts.com/css/transponder-aoe');

.portholeContainer, .portholeContainer * {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* ИЗМЕНЕНО: Контейнер теперь относительный и занимает всю обертку */
.portholeContainer {
    position: relative;
    /* Задаем КОНКРЕТНЫЙ размер для самого иллюминатора */
    width: 700px;  
    height: 700px; 
    
    /* Делаем его адаптивным для маленьких экранов */
    max-width: 90vw;
    max-height: 90vh;
    
    /* Сохраняем круглую форму при сжатии */
    aspect-ratio: 1 / 1;
}

#noiseSvg {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    opacity: 0.1;
}
#noiseRect {
    width: 100%; /* ИЗМЕНЕНО */
    height: 100%; /* ИЗМЕНЕНО */
}

/* ИЗМЕНЕНО: Убрано position: absolute и центрирование */
.outerRim {
    --init-size: 100%; 
    
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    
    width: var(--init-size);
    height: var(--init-size);
    border-radius: 50%;
    overflow: hidden; 
    box-shadow: -40px 40px 30px 10px rgb(0, 0, 0, 0.4), 
        -80px 80px 40px 10px rgb(0, 0, 0, 0.6), 
        -120px 120px 80px 10px rgb(0, 0, 0, 0.6); 
    background: linear-gradient(205deg, rgb(69 75 85) 0%, rgb(22 25 32) 100%);
}

.outerRim *, .leftModal, .rightModal, .leftBtn1, .leftBtn2, .leftBtn3 {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    background: linear-gradient(205deg, rgb(69 75 85) 0%, rgb(22 25 32) 100%);
}

.outerRim2 {
    width: calc(var(--init-size) * 0.97);
    height: calc(var(--init-size) * 0.97);
    box-shadow: 2px -2px 2px 0 rgb(108, 115, 129, 0.8), 
    -30px 30px 12px 10px rgb(0, 0, 0, 0.5),
    inset -2px 2px 2px 0 rgb(108, 115, 129, 0.2), 
    inset 2px -2px 2px 0px rgb(0, 0, 0, 0.3);
    border-radius: 50%;
}
.innerRim {
    border-radius: 50%;
    width: calc(var(--init-size) * 0.92);
    height: calc(var(--init-size) * 0.92);
    box-shadow: 
    -2px 2px 2px 0 rgba(108, 115, 129, 0.4), 
    2px -2px 1px 0px rgba(0, 0, 0, 0.2), 
    inset -3px 3px 2px 1px rgba(0, 0, 0, 0.5);
}
.outerWindow.invert{
    /* ИЗМЕНЕНО: Скорректирован transform-origin для нового размера */
    transform: rotate(180deg);
    transform-origin: 50% 75%; 
    scale: 0.99;
}
.outerWindow {
    background: none;
    /* ИЗМЕНЕНО: Возвращаем ширину панели к исходному значению */
    width: calc(var(--init-size) * 0.83); 
    height: calc(var(--init-size) * 0.45); 
    overflow: hidden;
    top: 30%; 
    bottom: unset;
}
.window {
    top: 0; /* ИЗМЕНЕНО: Начинается от верха родителя */
    background: none;
    width: 100%; /* Ширина по родителю .outerWindow */
    /* ИЗМЕНЕНО: Высота теперь 100% от родителя, а не половина */
    height: 100%; 
    bottom: unset;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 
    -2px 2px 2px 0 rgba(108, 115, 129, 0.4), 
    2px -2px 1px 0px rgba(0, 0, 0, 0.2);
}

.invert .windowRounded{
    /* НОВЫЙ ГРАДИЕНТ для придания объема поверхности панели */
    background: 
      linear-gradient(180deg, rgba(0,0,0,0.15) 0%, rgba(255,255,255,0) 15%, rgba(255,255,255,0) 85%, rgba(0,0,0,0.1) 100%),
    /* Старый градиент, отвечающий за отражение */
      linear-gradient(0deg, rgba(0,0,0,0.7) 48%, rgba(255,255,255,0) 57%, rgba(255,255,255,0) 100%), 
    /* Базовый цвет панели */
      rgb(202, 216, 228);

    box-shadow: 
    -2px 2px 1px 0px rgba(0, 0, 0, 0.4), 
    2px -2px 2px 0 rgba(108, 115, 129, 0.2), 
    inset -4px -3px 12px 1px rgba(152, 243, 248, 0.1),
    inset 2px 3px 7px 1px rgba(0, 0, 0, 0.5);
}
.invert .window {
    box-shadow: 
    /* Внешние тени, которые были раньше */
    2px -2px 1px 0 rgba(108, 115, 129, 0.4), 
    -2px 4px 3px 0px rgba(0, 0, 0, 0.4),
    
    /* НОВАЯ ТЕНЬ: Создает эффект глубины сверху */
    inset 0px 8px 10px -5px rgba(0, 0, 0, 0.6),

    /* НОВЫЙ БЛИК: Легкий светлый блик снизу для контраста */
    inset 0px -2px 2px 0px rgba(255, 255, 255, 0.2);
}

.windowRounded {
    background: rgb(0, 0, 0, 0.5);
    border-radius: 50%;
    /* ИЗМЕНЕНО: Высота скорректирована для новой логики */
    height: 180%; 
    width: 100%;
    bottom: unset;
    /* ИЗМЕНЕНО: Позиция скорректирована */
    top: 5%; 
    margin: 1px;
    overflow: hidden;
    box-shadow: 
    -2px 2px 2px 0 rgba(108, 115, 129, 0.4), 
    2px -2px 1px 0px rgba(0, 0, 0, 0.2), 
    inset -3px 3px 2px 1px rgba(0, 0, 0, 0.5);
}
.loadingBar {
    background: none;
    width: 18%;
    height: 1.4%;
    bottom: 8%;
    border-radius: 50px;
    overflow: hidden;
    box-shadow: 
     0px 0px 2px 1px rgba(0, 0, 0, 0.2),
     -1px 2px 6px 4px rgba(0, 0, 0, 0.3),
     1px -2px 6px 4px rgba(255, 255, 255, 0.5),
    inset 0px 0px 0px 12px rgba(0, 0, 0, 0.8);
}
.outerRim:not(.powerOn) .loadingBar > div{
    width: 0%;
}
.loadingBar > div {
    --color-1: rgba(152, 243, 248, 0.9);
    --color-2: rgba(0,0,0, 0.7);
    background: var(--color-1);
    width: 21.9%;
    height: 50%;
    transition: all 0.2s ease-in-out;
    opacity: 0;
    left: unset;
    right: 3%;
    position: absolute;
}
.loadingBar > div:nth-child(1) { 
    border-top-right-radius: 20px;
    border-bottom-right-radius: 20px;
    transition-delay: 0.2s;
}
.loadingBar > div:nth-child(2) { 
    transform: translateX(-110%);
    transition-delay: 0.4s;
}
.loadingBar > div:nth-child(3) { 
    transform: translateX(-220%);
    transition-delay: 0.6s;
}
.loadingBar > div:nth-child(4) { 
    transform: translateX(-330%);
    border-top-left-radius: 20px;
    border-bottom-left-radius: 20px;
    transition-delay: 0.8s;
}
.powerOn .loadingBar.active > div {
    opacity: 1;
}
.backCircle {
    border-radius: 50%;
    width: 30%;
    height: 30%;
    bottom: unset;
    top: 12.2%;
    right: 0.5%;
    background: none;
    box-shadow: 
    -12px 22px 22px 0px rgba(152, 243, 248,0.2), 
    -6px 12px 12px 4px rgba(152, 243, 248, 0.2), 
    0px 0px 0px 4px rgba(108, 115, 129, 0); 
}
.circle {
    border-radius: 50%;
    width: 30%;
    height: 30%;
    bottom: unset;
    top: 12.2%;
    right: 0.5%;
    transition: transform 1s ease-in-out;
    box-shadow: 
    0px 0px 2px 2px rgba(108, 115, 129, 0.4), 
    0px 0px 3px 4px rgba(108, 115, 129, 0.2); 
}
.innerCircle {
    border-radius: 50%;
    width: 28.6%;
    height: 28.6%;
    bottom: unset;
    top: 12.5%;
    box-shadow:
    26px -26px 42px 20px rgba(0, 0, 0, 0.5),
    16px -16px 22px 0px rgba(0, 0, 0, 0.4),
    6px -6px 12px 0px rgba(0, 0, 0, 0.5),
    inset -3px 3px 2px 1px rgba(0, 0, 0, 0.5),
    inset 5px -5px 14px 3px rgba(108, 115, 129, 0.5), 
    inset 10px -10px 12px 5px rgba(0, 0, 0, 0.1);
    display: block;
    background: linear-gradient(25deg, rgb(69 75 85) 0%, rgb(22 25 32) 100%);
    cursor: pointer;
}
.sixthsContainer {
    background: none;
    transition: transform 1s ease-in-out;
    width: 100%;
    height: 100%;
}
.sixths {
    position: absolute;
    width: 24.3%;
    height: 100%;
    background: none;
    transform: rotate(0deg);
    transform-origin: 50%;
    margin: auto;
    left: 0;
    right: 0;
}
.sixths:nth-child(2) {transform:  rotate(-60deg);}
.sixths:nth-child(3) {transform:  rotate(-120deg);}
.sixths:nth-child(4) {transform:  rotate(-180deg);}
.sixths:nth-child(5) {transform:  rotate(-240deg);}
.sixths:nth-child(6) {transform:  rotate(-300deg);}

.sixths .icon {
    background: none;
    position: absolute;
    width: 100%;
    height: 24.3%;
    top: unset;
    bottom: 5%;
    margin: auto;
    left: 0;
    right: 0;
}
.sixths .icon svg{
    width: 100%;
    height: 100%;
    background: none;
}
.sixths .icon svg *{
    opacity: 0.07;
    transition: all 0.5s ease-in-out;
    filter: drop-shadow(0px 0px 4px rgba(152, 243, 248, 0.1));
}
.powerOn .sixths .icon svg *{
    opacity: 0.4;
    transition-delay: 0.5s;
}
.powerOn .sixths.active .icon svg > *{
    opacity: 1;
    transition: all 0.5s ease-in-out;
    filter: drop-shadow(0px 0px 6px rgba(152, 243, 248, 1));
}
.leftModal {
    background: rgb(40, 44, 54);
    width: 13%;
    height: 45%;
    border-radius: 14px;
    left: unset;
    right: 4%;
    bottom: unset;
    box-shadow: 
    0 0 6px 2px rgba(0, 0, 0, 0.4),
    inset 0px -44px 18px -20px rgba(0, 0, 0, 0.2),
    inset 4px -4px 18px 4px rgba(0, 0, 0, 0.3),
    inset -2px 1px 4px 1px rgba(108, 115, 129, 0.3),
    inset -10px 2px 10px -4px rgba(108, 115, 129, 0.5);
}
.power {
    transform: rotate(180deg);
    width: 69%;
    height: 19.88%;
    border-radius: 12px;
    top: unset;
    bottom: 4.5%;
    left: unset;
    right: 15.5%;
    overflow: hidden;
    box-shadow: 
    -4px 4px 4px 0px rgba(0, 0, 0, 0.3),
    0px 0px 0px 1px rgba(0,0,0, 0.6);
    cursor: pointer;
    transition: box-shadow 0.1s ease-in-out;
}
.power:hover{
    box-shadow: 
    -3px 3px 2px 0px rgba(0, 0, 0, 0.3),
    0px 0px 0px 1px rgba(0,0,0, 0.6),
    inset 0px 0px 5px 3px rgba(0,0,0, 0.2),
    inset 0px 0px 0px 1px rgba(0,0,0, 0.3);
}
.power:hover .innerPower {
    transform: scale(0.97);
}
.innerPower {
    transform: rotate(180deg);
    width: 80%;
    height: 80%;
    border-radius: 10px;
    box-shadow: 
    4px -4px 18px 4px rgba(0, 0, 0, 0.3),
    0px 0px 2px 1px rgba(108, 115, 129, 0.6),
    inset 0px -54px 18px -20px rgba(0, 0, 0, 0.2),
    inset 4px -4px 18px 4px rgba(0, 0, 0, 0.3);
}
.power:hover .innerPower{
    box-shadow: 
    4px -4px 18px 4px rgba(0, 0, 0, 0.4),
    0px 0px 2px 1px rgba(108, 115, 129, 0.6),
    inset 0px -54px 18px -20px rgba(0, 0, 0, 0.2),
    inset 4px -4px 18px 4px rgba(0, 0, 0, 0.4);
}
.innerPower::before {
    display: block;
    content: "";
    width: 40%;
    height: 40%;
    border-radius: 50%;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
    border: 2px solid rgba(152, 243, 248,0.6);
    box-shadow: 
    0px 0px 4px 2px rgba(152, 243, 248, 0.1);
    transition: all 0.1s ease-in-out;
}
.innerPower::after{
    display: block;
    content: "";
    width: 4%;
    height: 25%;
    border-radius: 2px;
    position: absolute;
    left: 0;
    right: 0;
    top: 30%;
    bottom: 0%;
    margin: auto;
    background: rgba(152, 243, 248, 0.5);
    box-shadow: 
    0px 0px 4px 2px rgba(152, 243, 248, 0.2),
    0px 0px 0px 3px rgba(19,21,26, 1),
    0px 0px 4px 3px rgba(19,21,26, 0.5);
    transition: all 0.1s ease-in-out;
}
.powerOn .innerPower::before {
    border: 2px solid rgba(152, 243, 248, 1);
    box-shadow: 
    0px 0px 4px 2px rgba(152, 243, 248, 0.5);
}
.powerOn .innerPower::after {
    background: rgba(152, 243, 248, 1);
    box-shadow: 
    0px 0px 4px 2px rgba(152, 243, 248, 0.7),
    0px 0px 0px 4px rgba(19,21,26, 1),
    0px 0px 0px 5px rgba(19,21,26, 0.5);
}
.leftBtn1,
.leftBtn2,
.leftBtn3 {
    background: rgb(40, 44, 54);
    box-shadow: 
    inset 2px -2px 4px 0px rgba(255,255,255, 0.2),
    inset -2px 2px 4px 0px rgba(0,0,0, 0.2),
    2px -2px 5px 0px rgba(0, 0, 0, 1),
    0px 0px 2px 1px rgba(0,0,0, 0.3),
    0px 0px 0px 1px rgba(0,0,0, 1);
    width: 7%;
    height: 7%;
    border-radius: 8px;
    left: unset;
    right: 22%;
    bottom: 18%;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}
.leftBtn2 {
    bottom: 38%;
}
.leftBtn3 {
    bottom: 58%;
}
.leftBtn1:hover,
.leftBtn2:hover,
.leftBtn3:hover {
    box-shadow: 
    inset 2px -2px 4px 0px rgba(133, 133, 133, 0.2),
    inset -2px 2px 4px 0px rgba(0,0,0, 0.2),
    1px -1px 3px 0px rgba(0, 0, 0, 1),
    0px 0px 2px 1px rgba(0,0,0, 0.3),
    0px 0px 0px 1px rgba(0,0,0, 1);
}
.leftBtn1:hover > svg,
.leftBtn2:hover > svg,
.leftBtn3:hover > svg  {
    transform: scale(0.97);
}

.leftBtn1 svg,
.leftBtn2 svg,
.leftBtn3 svg {
    width: 70%;
    height: 70%;
    background: none;
    transform: rotate(180deg);
}
.leftBtn1 svg *,
.leftBtn2 svg *,
.leftBtn3 svg * {
    opacity: 0.07;
    transition: all 0.5s ease-in-out;
    fill: rgba(152, 243, 248, 0.7) !important;
    filter: drop-shadow(0px 0px 4px rgba(152, 243, 248, 0.1));
}
.powerOn .leftBtn1 svg *,
.powerOn .leftBtn2 svg *,
.powerOn .leftBtn3 svg * {
    opacity: 0.4;
}
.powerOn .active.leftBtn1 svg *,
.powerOn .active.leftBtn2 svg *,
.powerOn .active.leftBtn3 svg * {
    opacity: 1;
    transition: all 0.5s ease-in-out;
    filter: drop-shadow(0px 0px 6px rgba(152, 243, 248, 1));
}
.rightModal {
    background: rgb(40, 44, 54);
    width: 32%;
    height: 51%;
    right: unset;
    left: 0;
    bottom: unset;
    box-shadow: 
    inset 0px 0px 40px 42px rgba(0,0,0, 0.3),
    inset -24px 0px 16px -22px rgba(158, 192, 201, 1),
    inset 0px -54px 18px -20px rgba(0, 0, 0, 0.4),
    inset 4px -4px 18px 4px rgba(0, 0, 0, 0.3);
}
.rightModal p.label{
    color: rgba(170, 170, 170, 0.2);
    background: none;
    width: fit-content;
    height: fit-content;
    transform: rotate(180deg);
    font-size: calc(var(--init-size) / 64);
    top: unset;
    bottom: 6%;
    right: 5%;
    pointer-events: none;
    transition: all 0.5s ease-in-out;
}
.powerOn .rightModal p.label{
    color: rgba(170, 170, 170, 0.8);
    text-shadow:
    0px 0px 3px rgba(255, 255, 255, 0.4),
    0px 0px 8px rgba(255, 255, 255, 0.5);
}
.screen {
    background: rgb(0, 0, 0);
    width: 60%;
    height: 16%;
    right: unset;
    left: 18%;
    top: unset;
    bottom: 14%;
    text-align: center;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 0 5px 0 rgba(108, 115, 129, 0.5),
    inset 0 0 2px 2px rgba(0,0,0, 1),
    inset 0 0 2px 2px rgba(255,255,255, 0.7);
}
.powerOn p.temp {
    color: rgba(255, 255, 255, 0.45);
    text-shadow: 
    0px 0px 3px rgba(255, 255, 255, 0.3),
    0px 0px 8px rgba(255, 255, 255, 0.4);
    transition: 1s color ease-in-out, 1s text-shadow ease-in-out;
    transition-delay: 0.2s;
}
p.temp {
    background: none;
    font-size: calc(var(--init-size) / 30);
    font-weight: 500;
    letter-spacing: 4px;
    font-family: 'Transponder AOE', sans-serif;
    transform: rotate(180deg);
    white-space: nowrap;
    padding: 7% 4px 14px 16%;
    position: absolute;
    pointer-events: none;
}
.toggle {
    color: rgba(170, 170, 170, 0.725);
    font-size: calc(var(--init-size) / 50);
    background: rgba(0, 0, 0, 0.5);
    transform: rotate(180deg);
    width: 24%;
    height: 8%;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 20px;
    left: 29%;
    bottom: -23%;
    box-shadow: 
    2px -2px 4px 0 rgba(255, 255, 255, 0.1),
    -2px 2px 6px 0 rgba(0,0,0, 0.7),
    0px -5px 12px 0 rgba(158, 192, 201, 0.1),
    inset 0px 0px 1px 1px rgba(0, 0, 0, 0.7),
    inset -1px 2px 4px 0 rgba(255, 255, 255, 0.4);
    cursor: pointer;
}
.toggle.two{
    left: 18%;
    right: unset;
}
.powerOn .toggle.active {
    color: #aaaaaacc;
    text-shadow:
    0px 0px 3px rgba(255, 255, 255, 0.5),
    0px 0px 8px rgba(255, 255, 255, 0.6);
    box-shadow: 
    2px -2px 4px 0 rgba(255, 255, 255, 0.1),
    -2px 2px 6px 0 rgba(0,0,0, 0.7),
    0px -5px 12px 0 rgba(158, 192, 201, 0.1),
    inset 0px 0px 1px 1px rgba(0, 0, 0, 0.7),
    inset -1px 2px 4px 0 rgba(255, 255, 255, 0.4);
}
.toggle:hover{
    background: rgba(0, 0, 0, 0.6);
    box-shadow: 
    2px -2px 4px 0 rgba(255, 255, 255, 0.1),
    -2px 2px 6px 0 rgba(0,0,0, 0.7),
    0px -5px 12px 0 rgba(158, 192, 201, 0.1),
    inset 0px 0px 1px 1px rgba(0, 0, 0, 0.7),
    inset -1px 2px 4px 0 rgba(255, 255, 255, 0.3);
    transform: scale(0.97);
}

#rocketIco {
    filter: grayscale(0.7);
}
#rocketIco #thrusterflame{
    fill: rgb(154, 244, 250) !important;
    filter: drop-shadow(0 10px 3px rgb(11, 223, 238));
}

@keyframes rocketAnimation {
    0% {
        transform:  translateY(-10%) translateX(60%) rotate(40deg) scale(1);
    }
    100% {
        transform:  translateY(-70%)  translateX(60%) rotate(0deg) scale(0);
    }
}

#monsterIco {
    opacity: 0;
}
@keyframes monsterAnimation {
    0% {
        opacity: 1;
        transform:  translateX(-30%);
    }
    100% {
        opacity: 1;
        transform:  translateX(50%);
    }
}

@keyframes biplaneAnimation {
    0% {
        opacity: 1;
        transform:  translateX(0%);
        transform: rotate(0deg);
    }
    5% { transform: rotate(0.2deg) }
    10% { transform: rotate(-0.2deg) }
    15% { transform: rotate(0.2deg) }
    20% { transform: rotate(-0.2deg) }
    25% { transform: rotate(0.2deg) }
    30% { transform: rotate(-0.2deg) }
    35% { transform: rotate(0.2deg) }
    40% { transform: rotate(-0.2deg) }
    45% { transform: rotate(0.2deg) }
    50% { transform: rotate(-0.2deg) }
    55% { transform: rotate(0.2deg) }
    60% { transform: rotate(-0.2deg) }
    65% { transform: rotate(0.2deg) }
    70% { transform: rotate(-0.2deg) }
    75% { transform: rotate(0.2deg) }
    80% { transform: rotate(-0.2deg) }
    85% { transform: rotate(0.2deg) }
    90% { transform: rotate(-0.2deg) }
    95% { transform: rotate(0.2deg) }
    100% {
        opacity: 1;
        transform:  translateX(-95%);
    }
}
