// CarDetailsPanel.js

import React, { useState } from 'react';

// =======================================================================
// üé® –õ–û–ö–ê–õ–¨–ù–´–ï –°–¢–ò–õ–ò –î–õ–Ø CarDetailsPanel
// =======================================================================
const localStyles = {
    detailsColumn: {
        padding: '24px',
        backgroundColor: '#1c1c1c',
        borderRadius: '12px',
        border: '1px solid #333',
        color: '#f0f0f0',
        display: 'flex', 
        flexDirection: 'column', 
        position: 'relative', 
    },
    carTitle: { 
        fontSize: '28px', 
        fontWeight: 'bold', 
        margin: '0 0 24px 0', 
        color: '#f0f0f0', 
        lineHeight: 1.3, 
    },
    specsTable: { 
        display: 'grid', 
        gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))', 
        gap: '20px', 
        padding: '20px', 
        backgroundColor: '#242424', 
        borderRadius: '8px', 
        border: '1px solid #333', 
    },
    specItem: { 
        display: 'flex', 
        flexDirection: 'column', 
        gap: '4px', 
    },
    specKey: { 
        color: '#999', 
        fontSize: '14px', 
    },
    specValue: { 
        color: '#f0f0f0', 
        fontWeight: '500', 
        fontSize: '16px', 
    },
    divider: { 
        margin: '24px 0', 
        borderBottom: '1px solid #333', 
    },
    colors: { 
        display: 'flex', 
        alignItems: 'center', 
        gap: '12px', 
        marginBottom: '24px', 
    },
    colorSwatches: { 
        display: 'flex', 
        gap: '8px', 
    },
    colorSwatch: { 
        width: '24px', 
        height: '24px', 
        borderRadius: '50%', 
        border: '2px solid #242424', 
        cursor: 'pointer', 
        boxShadow: '0 0 0 1px #444', 
        transition: 'border-color 0.2s',
    },
    colorSwatchActive: {
        width: '24px', 
        height: '24px', 
        borderRadius: '50%', 
        border: '3px solid #E30016', 
        cursor: 'pointer', 
        boxShadow: '0 0 0 1px #444',
    },
    
    // –ë–ª–æ–∫ —Ü–µ–Ω—ã –≤ –ö–∏—Ç–∞–µ (–º–µ–Ω—å—à–∏–π –±–ª–æ–∫)
    priceChinaBlock: { 
        padding: '12px 20px',
        backgroundColor: '#242424', 
        borderRadius: '8px', 
        border: '1px solid #333', 
        marginBottom: '20px',
        textAlign: 'center',
    },
    priceChinaText: {
        fontSize: '18px', 
        color: '#f0f0f0', 
        margin: '0', 
    },
    
    // –°—Ç–∏–ª—å –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –ö–†–ê–°–ù–û–ô –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É
    finalOrderButton: { 
        width: '100%', 
        padding: '12px 20px',
        backgroundColor: '#E30016', 
        color: 'white', 
        border: 'none', 
        borderRadius: '8px', 
        fontSize: '18px', 
        fontWeight: 'bold', 
        cursor: 'pointer', 
        transition: 'background-color 0.2s', 
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        marginTop: '20px',
    },
    finalOrderButtonPrice: { 
        fontSize: '32px', 
        fontWeight: 'bold', 
        color: '#f0f0f0', 
        margin: '4px 0 0 0', 
    },
    finalOrderButtonLabel: {
        color: 'rgba(255, 255, 255, 0.8)',
        fontSize: '14px',
        fontWeight: 'normal',
    },

    deliveryInfo: { 
        fontSize: '13px', 
        color: '#bbb', 
        margin: '20px 0', 
        padding: '12px 16px', 
        backgroundColor: '#242424', 
        borderRadius: '8px', 
        border: '1px solid #333', 
        display: 'flex', 
        alignItems: 'center', 
    },
    alertIcon: { 
        color: '#E30016', 
        marginRight: '8px', 
        fontWeight: 'bold', 
    },
    
    // –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ –µ–≥–æ –¥–µ—Ç–∞–ª–∏
    calcToggleButton: { 
        fontSize: '14px', 
        color: '#34a853', 
        fontWeight: '500', 
        cursor: 'pointer', 
        marginTop: '16px', 
        display: 'flex', 
        alignItems: 'center', 
        gap: '8px', 
        userSelect: 'none', 
    },
    calcArrow: { 
        fontSize: '10px', 
        transition: 'transform 0.2s ease-in-out', 
    },
    calcDetailsWrapper: { 
        marginTop: '20px', 
        paddingTop: '20px', 
        borderTop: '1px solid #333', 
        display: 'flex', 
        flexDirection: 'column', 
        gap: '16px', 
        marginBottom: '30px', 
    },
    calcRow: { 
        display: 'flex', 
        justifyContent: 'space-between', 
        alignItems: 'flex-start', 
        paddingBottom: '16px', 
        borderBottom: '1px solid #333', 
    },
    calcTotalRow: { 
        paddingBottom: '16px', 
        marginBottom: '8px', 
        display: 'flex',
        justifyContent: 'space-between',
        fontWeight: 'bold',
        fontSize: '18px',
        color: '#E30016'
    },
    calcLabel: { 
        fontSize: '16px', 
        color: '#e0e0e0', 
        fontWeight: '500', 
    },
    calcDescription: { 
        fontSize: '13px', 
        color: '#888', 
        margin: '4px 0 0 0', 
        maxWidth: '300px', 
    },
    calcValue: { 
        fontSize: '16px', 
        color: '#f0f0f0', 
        fontWeight: '600', 
        textAlign: 'right', 
        whiteSpace: 'nowrap', 
        marginLeft: '16px', 
    },
};

/**
 * üìä –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏ —Å –¥–µ—Ç–∞–ª—è–º–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —Ü–µ–Ω–∞–º–∏ –∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º.
 * @param {object} props
 * @param {object} props.car - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.
 */
const CarDetailsPanel = ({ car }) => {
    // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º –õ–û–ö–ê–õ–¨–ù–´–ô –æ–±—ä–µ–∫—Ç styles
    const { 
        detailsColumn, carTitle, specsTable, specItem, specKey, specValue, 
        divider, colors, colorSwatches, colorSwatch, colorSwatchActive, 
        priceChinaBlock, priceChinaText, finalOrderButton, finalOrderButtonPrice, finalOrderButtonLabel, 
        deliveryInfo, alertIcon,
        calcToggleButton, calcArrow, calcDetailsWrapper, calcRow, calcTotalRow,
        calcLabel, calcDescription, calcValue
    } = localStyles;

    const [showCalculator, setShowCalculator] = useState(false);
    const [selectedColor, setSelectedColor] = useState(car.colors?.[0]?.name || '–ù/–î');

    const specs = car.specs || {};
    const hasDeliveryInfo = true; // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏

    // ‚ö†Ô∏è –õ–û–ì–ò–ö–ê –†–ê–°–ß–ï–¢–ê –° –ù–û–í–û–ô –ö–û–ú–ò–°–°–ò–ï–ô
    const basePrice = car.price_russia || 0;
    const customsDuty = basePrice * 0.2; 
    const certification = 80000;
    const nsbhCommission = 240000; // –ù–û–í–ê–Ø –ö–û–ú–ò–°–°–ò–Ø NSBHAuto
    
    const totalCost = basePrice + customsDuty + certification + nsbhCommission; // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏—Ç–æ–≥

    return (
        <div style={detailsColumn}>
            <h2 style={carTitle}>{car.name}</h2>

            {/* –ë–ª–æ–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ */}
            <div style={specsTable}>
                <div style={specItem}>
                    <span style={specKey}>–î–≤–∏–≥–∞—Ç–µ–ª—å</span>
                    <span style={specValue}>{specs.engine_type || '–ù/–î'}</span>
                </div>
                <div style={specItem}>
                    <span style={specKey}>–ú–æ—â–Ω–æ—Å—Ç—å</span>
                    <span style={specValue}>{specs.engine_power || '–ù/–î'} –ª.—Å.</span>
                </div>
                <div style={specItem}>
                    <span style={specKey}>–ö–æ—Ä–æ–±–∫–∞</span>
                    <span style={specValue}>{specs.transmission_type || '–ù/–î'}</span>
                </div>
                <div style={specItem}>
                    <span style={specKey}>–ü—Ä–∏–≤–æ–¥</span>
                    <span style={specValue}>{specs.drive_type || '–ù/–î'}</span>
                </div>
                <div style={specItem}>
                    <span style={specKey}>–ü—Ä–æ–±–µ–≥</span>
                    <span style={specValue}>{car.mileage ? `${(car.mileage / 1000).toFixed(0)} —Ç—ã—Å. –∫–º` : '–ù/–î'}</span>
                </div>
            </div>

            <div style={divider} />

            {/* –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ */}
            <div style={colors}>
                <span style={specKey}>–¶–≤–µ—Ç –∫—É–∑–æ–≤–∞:</span>
                <div style={colorSwatches}>
                    {(car.colors || []).map((color, index) => (
                        <div 
                            key={index} 
                            style={{ 
                                ...(selectedColor === color.name ? colorSwatchActive : colorSwatch), 
                                backgroundColor: color.hex_code || '#fff' 
                            }}
                            onClick={() => setSelectedColor(color.name)}
                            title={color.name}
                        />
                    ))}
                </div>
                <span style={{ fontSize: '14px', fontWeight: '500' }}>{selectedColor}</span>
            </div>

            <div style={divider} />
            
            {/* –ë–ª–æ–∫ —Ü–µ–Ω—ã –≤ –ö–∏—Ç–∞–µ */}
            <div style={priceChinaBlock}>
                <p style={priceChinaText}>–¶–µ–Ω–∞ –≤ –ö–∏—Ç–∞–µ: {car.price_china ? car.price_china.toLocaleString('ru-RU') + ' ¬•' : '–ù/–î'}</p>
            </div>
            
            {hasDeliveryInfo && (
                <div style={deliveryInfo}>
                    <span style={alertIcon}>!</span>
                    –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 25-45 –¥–Ω–µ–π. –¶–µ–Ω–∞ –≤–∫–ª—é—á–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É –¥–æ –ú–æ—Å–∫–≤—ã –∏ —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.
                </div>
            )}
            
            {/* –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (–ö–Ω–æ–ø–∫–∞-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å) */}
            <div style={calcToggleButton} onClick={() => setShowCalculator(!showCalculator)}>
                –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
                <span style={{ ...calcArrow, transform: showCalculator ? 'rotate(90deg)' : 'rotate(0deg)' }}>‚ñ∂</span>
            </div>
            
            {/* –î–µ—Ç–∞–ª–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ (—Å–∫—Ä—ã–≤–∞–µ–º—ã–π –±–ª–æ–∫) */}
            {showCalculator && (
                <div style={calcDetailsWrapper}>
                    <div style={calcRow}>
                        <div style={calcLabel}>–ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ –≤ –†–§</div>
                        <div style={calcValue}>{basePrice.toLocaleString('ru-RU')} ‚ÇΩ</div>
                    </div>
                    {/* ‚ö†Ô∏è –ù–û–í–ê–Ø –°–¢–†–û–ö–ê: –ö–û–ú–ò–°–°–ò–Ø NSBHAuto */}
                    <div style={calcRow}>
                        <div>
                            <div style={calcLabel}>–ö–æ–º–∏—Å—Å–∏—è NSBHAuto</div>
                            <p style={calcDescription}>–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ –ø–æ –ø–æ–¥–±–æ—Ä—É, –ø—Ä–æ–≤–µ—Ä–∫–µ, –≤—ã–∫—É–ø—É –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—é —Å–¥–µ–ª–∫–∏.</p>
                        </div>
                        <div style={calcValue}>+ {nsbhCommission.toLocaleString('ru-RU')} ‚ÇΩ</div>
                    </div>
                    <div style={calcRow}>
                        <div>
                            <div style={calcLabel}>–¢–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞</div>
                            <p style={calcDescription}>–í–∫–ª—é—á–∞–µ—Ç –ù–î–°, –∞–∫—Ü–∏–∑ –∏ –ø–æ—à–ª–∏–Ω—É –∑–∞ –æ–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è.</p>
                        </div>
                        <div style={calcValue}>+ {customsDuty.toLocaleString('ru-RU')} ‚ÇΩ</div>
                    </div>
                    <div style={calcRow}>
                        <div>
                            <div style={calcLabel}>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –≠–ü–¢–°</div>
                            <p style={calcDescription}>–ü–æ–ª—É—á–µ–Ω–∏–µ –°–ë–ö–¢–°, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≠–†–ê-–ì–õ–û–ù–ê–°–° –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≠–ü–¢–°.</p>
                        </div>
                        <div style={calcValue}>+ {certification.toLocaleString('ru-RU')} ‚ÇΩ</div>
                    </div>
                    <div style={calcTotalRow}>
                        <div style={calcLabel}>–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</div>
                        <div style={calcValue}>{totalCost.toLocaleString('ru-RU')} ‚ÇΩ</div>
                    </div>
                </div>
            )}
            
            {/* –ö–ù–û–ü–ö–ê –° –ò–¢–û–ì–û–í–û–ô –¶–ï–ù–û–ô –í –°–ê–ú–û–ú –ù–ò–ó–£ */}
            <button style={finalOrderButton}>
                <span style={finalOrderButtonLabel}>–ó–∞–∫–∞–∑–∞—Ç—å {car.brand || ''} {car.model || ''} (–¶–µ–Ω–∞ –ø–æ–¥ –∫–ª—é—á)</span>
                <span style={finalOrderButtonPrice}>
                    {(totalCost || 0).toLocaleString('ru-RU')} ‚ÇΩ
                </span>
            </button>
        </div>
    );
};

export default CarDetailsPanel;