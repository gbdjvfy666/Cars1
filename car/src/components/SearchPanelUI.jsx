import React, { useState, useEffect, useRef } from 'react';
import styles from './SearchPanelUI.module.css';

const SearchPanelUI = () => {
    // –ü–∞–Ω–µ–ª—å —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –∞–∫—Ç–∏–≤–Ω–∞, —Å–æ—Å—Ç–æ—è–Ω–∏–µ isPowerOn —É–±—Ä–∞–Ω–æ
    const [angle, setAngle] = useState(0);
    const [filterIndex, setFilterIndex] = useState(0);
    const [foundCount, setFoundCount] = useState(1488); 
    
    const rotRef = useRef(null);
    const countRef = useRef(null);
    const loadingBarRef = useRef(null);
    
    const filterData = [
        { name: '–í—Å–µ', count: 1488 }, 
        { name: '–ì–µ—Ä–º–∞–Ω–∏—è', count: 320 }, 
        { name: '–Ø–ø–æ–Ω–∏—è', count: 512 },
        { name: '–ö–æ—Ä–µ—è', count: 250 }, 
        { name: '–ö–∏—Ç–∞–π', count: 310 },  
        { name: '–°–®–ê', count: 96 }
    ];

    // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω–∏—á–µ—Å–∫–æ–≥–æ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ –Ω–∞ –≤—Ä–∞—â–∞—é—â–µ–º—Å—è —Ñ–æ–Ω–µ
    useEffect(() => {
        if (rotRef.current) {
            const step = 2;
            const color1 = 'rgba(0,0,0,0.5)';
            const color2 = 'rgba(0,0,0,0.1)';
            let gradient = 'conic-gradient(';
            for (let i = 0; i < 360; i += step) {
                const color = i % (2 * step) === 0 ? color1 : color2;
                gradient += `${color} ${i}deg, `;
            }
            gradient = gradient.slice(0, -2) + '), rgb(85 93 108)';
            rotRef.current.style.background = gradient;
        }
    }, []);

    // –õ–æ–≥–∏–∫–∞ –≤—Ä–∞—â–µ–Ω–∏—è —Ü–∏—Ñ–µ—Ä–±–ª–∞—Ç–∞
    const handleDialClick = () => {
        const newAngle = angle + 60;
        setAngle(newAngle);
        const newIndex = (filterIndex + 1) % filterData.length;
        setFilterIndex(newIndex);
        setFoundCount(filterData[newIndex].count); 
        
        // –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ "–∑–∞–≥—Ä—É–∑–∫–∏"
        if (loadingBarRef.current) {
            loadingBarRef.current.classList.add(styles.active);
            setTimeout(() => {
                loadingBarRef.current && loadingBarRef.current.classList.remove(styles.active);
            }, 1200);
        }
    };
    
    // –§—É–Ω–∫—Ü–∏–∏-–∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏
    const handleAction1Click = () => { console.log("–î–µ–π—Å—Ç–≤–∏–µ 1: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫"); };
    const handleAction2Click = () => { console.log("–î–µ–π—Å—Ç–≤–∏–µ 2: –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã"); };
    const handleAction3Click = () => { console.log("–î–µ–π—Å—Ç–≤–∏–µ 3: –ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"); };

    return (
        <div className={styles.searchPanelContainer}>
            <div className={styles.outerRim}>
                <div className={styles.outerRim2}>
                    <div className={styles.innerRim}>

                        {/* ======================================================= */}
                        {/* ||      –í–ï–†–•–ù–Ø–Ø –ß–ê–°–¢–¨: –§–û–†–ú–ê –ò –ö–ù–û–ü–ö–ò –î–ï–ô–°–¢–í–ò–ô        || */}
                        {/* ======================================================= */}
                        <div className={styles.searchFormContainer}>
                           <div className={styles.formFields}>
                                <h3>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–±–æ—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è</h3>
                                <div className={styles.inputGroup}>
                                    <input type="text" placeholder="–ú–∞—Ä–∫–∞" />
                                    <input type="text" placeholder="–ú–æ–¥–µ–ª—å" />
                                </div>
                                <div className={styles.inputGroup}>
                                    <input type="text" placeholder="–ì–æ–¥ –æ—Ç" />
                                    <input type="text" placeholder="–ë—é–¥–∂–µ—Ç –¥–æ, $" />
                                </div>
                                <button className={styles.searchButton}>–ù–∞–π—Ç–∏</button>
                           </div>
                           
                           <div className={styles.actionButtonsContainer}>
                                <div className={styles.actionButton} onClick={handleAction1Click}>
                                    <p>üîç</p><span>–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫</span>
                                </div>
                                <div className={styles.actionButton} onClick={handleAction2Click}>
                                    <p>‚ôªÔ∏è</p><span>–°–±—Ä–æ—Å–∏—Ç—å</span>
                                </div>
                                <div className={styles.actionButton} onClick={handleAction3Click}>
                                    <p>‚ù§Ô∏è</p><span>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</span>
                                </div>
                           </div>
                        </div>
                        
                        {/* ======================================================= */}
                        {/* ||             –ù–ò–ñ–ù–Ø–Ø –ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø              || */}
                        {/* ======================================================= */}
                        <div className={styles.controlPanel}>
                            <div className={styles.window}>
                                <div className={styles.windowRounded}>
                                    {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
                                    <div className={`${styles.loadingBar} ${styles.active}`} ref={loadingBarRef}>
                                      <div></div><div></div><div></div><div></div>
                                    </div>
                                    {/* –¶–∏—Ñ–µ—Ä–±–ª–∞—Ç */}
                                    <div className={styles.backCircle}></div>
                                    <div className={styles.circle} ref={rotRef} style={{ transform: `rotate(${angle}deg)` }}></div>
                                    <div className={styles.innerCircle} onClick={handleDialClick}>
                                        <div className={styles.dialLabel}>{filterData[filterIndex].name}</div>
                                    </div>
                                    
                                    {/* –î–∏—Å–ø–ª–µ–π —Å–ø—Ä–∞–≤–∞ */}
                                    <div className={styles.rightDisplayBlock}>
                                        <p className={styles.label}>–ù–∞–π–¥–µ–Ω–æ –∞–≤—Ç–æ</p>
                                        <div className={styles.screen}>
                                            <p className={styles.countDisplay} ref={countRef}>
                                              {foundCount}
                                            </p>
                                        </div>
                                        <div className={`${styles.toggle} ${styles.active}`}>–ù–æ–≤—ã–µ</div>
                                        <div className={`${styles.toggle} ${styles.two}`}>–ë/–£</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    );
};

export default SearchPanelUI;