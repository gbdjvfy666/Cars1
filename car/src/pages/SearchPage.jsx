import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';

// ======================= –£–¢–ò–õ–ò–¢–ê –î–õ–Ø –î–ò–ù–ê–ú–ò–ß–ï–°–ö–û–ô –ó–ê–ì–†–£–ó–ö–ò =======================

async function fetchAllCars() {
    const modules = import.meta.glob('../data/cars/*/*/*.js');
    
    const carPromises = Object.entries(modules).map(async ([path, loader]) => {
        const module = await loader();
        const carData = module.default;

        // –ò–∑–≤–ª–µ–∫–∞–µ–º brand –∏ model –∏–∑ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É
        const pathParts = path.split('/');
        const brandSlug = pathParts[3];
        const modelSlug = pathParts[4];
        
        return {
            ...carData,
            id: pathParts[5].replace('.js', ''), // ID - —ç—Ç–æ –∏–º—è —Ñ–∞–π–ª–∞
            brandSlug,
            modelSlug,
        };
    });

    return Promise.all(carPromises);
}


// ======================= –ö–û–ú–ü–û–ù–ï–ù–¢–´ –°–¢–†–ê–ù–ò–¶–´ =======================
// –ö–∞—Ä—Ç–æ—á–∫–∞ –º–∞—à–∏–Ω—ã, –º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const CarCard = ({ car }) => (
    <Link to={`/cars/${car.brandSlug}/${car.modelSlug}/${car.id}`} style={styles.cardLink}>
        {/* ... JSX –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ ... */}
    </Link>
);


const SearchPage = () => {
    const [allCars, setAllCars] = useState([]); // –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –í–°–ï –º–∞—à–∏–Ω—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    const [displayedCars, setDisplayedCars] = useState([]);
    const [isLoading, setIsLoading] = useState(false);

    const [filters, setFilters] = useState({
        condition: 'new',
        origin: [],
        bodyType: [],
        engineType: [],
        priceFrom: 0,
        priceTo: 30000000,
    });
    
    // –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    const handleSearch = async () => {
        setIsLoading(true);
        let carsToFilter = allCars;

        // –ï—Å–ª–∏ –º–∞—à–∏–Ω—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö –æ–¥–∏–Ω —Ä–∞–∑
        if (carsToFilter.length === 0) {
            const fetchedCars = await fetchAllCars();
            setAllCars(fetchedCars);
            carsToFilter = fetchedCars;
        }
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        let filtered = carsToFilter;
        if (filters.condition === 'new') {
            filtered = filtered.filter(car => car.mileage === 0);
        } else if (filters.condition === 'used') {
            filtered = filtered.filter(car => car.mileage > 0);
        }
        // ... –¥—Ä—É–≥–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ ...
        filtered = filtered.filter(car => car.priceRussia >= filters.priceFrom && car.priceRussia <= filters.priceTo);

        setDisplayedCars(filtered);
        setIsLoading(false);
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    useEffect(() => {
        handleSearch();
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ–∑–Ω–∞—á–∞–µ—Ç "—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ"
    

    const handlePriceChange = (e) => {
        setFilters(prev => ({ ...prev, [e.target.name]: Number(e.target.value) || 0 }));
    };

    const handleConditionChange = (condition) => {
        setFilters(prev => ({ ...prev, condition }));
    };

    return (
        <div style={styles.page}>
            <div style={styles.breadcrumb}>üè† / –ü–æ–∏—Å–∫</div>
            <h1 style={styles.pageTitle}>–ü–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π</h1>

            <div style={styles.filterContainer}>
                <div style={styles.tabGroup}>
                    <button onClick={() => handleConditionChange('all')} style={filters.condition === 'all' ? styles.activeTab : styles.tab}>–í—Å–µ</button>
                    <button onClick={() => handleConditionChange('new')} style={filters.condition === 'new' ? styles.activeTab : styles.tab}>–ù–æ–≤—ã–µ</button>
                    <button onClick={() => handleConditionChange('used')} style={filters.condition === 'used' ? styles.activeTab : styles.tab}>–° –ø—Ä–æ–±–µ–≥–æ–º</button>
                </div>
                {/* ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã ... */}
                <div style={styles.priceFilters}>
                    <input name="priceFrom" onChange={handlePriceChange} style={styles.input} placeholder="–æ—Ç 0 ‚ÇΩ" />
                    <input name="priceTo" onChange={handlePriceChange} style={styles.input} placeholder="–¥–æ 30 000 000 ‚ÇΩ" />
                </div>
                <button style={styles.showButton} onClick={handleSearch} disabled={isLoading}>
                    {isLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : `–ü–æ–∫–∞–∑–∞—Ç—å (${displayedCars.length})`}
                </button>
            </div>
            
            <div style={styles.resultsGrid}>
                {displayedCars.map(car => <CarCard key={car.id} car={car} />)}
            </div>
        </div>
    );
};

const styles = { /* ... –≤—Å–µ —Å—Ç–∏–ª–∏ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ ... */ };

export default SearchPage;